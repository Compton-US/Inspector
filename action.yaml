name: Create CI Documentation (Dispatch)
description: 'Analyze the GitHub workflows in a repository, and produce documentation and diagrams.'
author: Chris Compton <chris.compton@nist.gov>

inputs:
  artifact_name:
    description: 'The name to use for the result artifact.  Defaults to content.'
    required: false
    default: 'content'
  output_path:
    description: 'The path to use inside artifact, and will be the location of extraction in your repository.  Defaults to output.'
    required: false
    default: 'output'
  file_prefix:
    description: 'The prefix to apply to all created files.  Defaults to Project.'
    required: false
    default: 'Project'
  markdown_name:
    description: 'The name of the markdown file.  Defaults to a combination of the prefix and other elements.'
    required: false

runs:
  using: composite
  steps:

    - name: Check out repository code.
      uses: actions/checkout@v3

    - name: Set up Python.
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up Graphviz.
      shell: bash
      run: |
        sudo apt install graphviz

    - name: Log the environment.
      shell: bash
      run: |
        ls -ltra
        python --version
        pip --version

    - name: Install any dependencies.
      shell: bash
      run: pip install -r ${{ github.action_path }}/requirements.txt
      
    - name: Execute script.
      shell: bash
      env:
        output_path: ${{ inputs.output_path }}
        file_prefix: ${{ inputs.file_prefix }}
        markdown_name: ${{ inputs.markdown_name }}
      run: |
        python ${{ github.action_path }}/app.py
        ls -ltra

    - name: Save the results.
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifact_name }}
        path: |
          ${{ inputs.output_path }}/${{ inputs.file_prefix }}*.graph.svg
          ${{ inputs.output_path }}/*.md
